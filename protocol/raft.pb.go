// Code generated by protoc-gen-go. DO NOT EDIT.
// source: raft.proto

package raft

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ServerRole int32

const (
	ServerRole_FOLLOWER  ServerRole = 0
	ServerRole_CANDIDATE ServerRole = 1
	ServerRole_LEADER    ServerRole = 2
)

var ServerRole_name = map[int32]string{
	0: "FOLLOWER",
	1: "CANDIDATE",
	2: "LEADER",
}
var ServerRole_value = map[string]int32{
	"FOLLOWER":  0,
	"CANDIDATE": 1,
	"LEADER":    2,
}

func (x ServerRole) String() string {
	return proto.EnumName(ServerRole_name, int32(x))
}
func (ServerRole) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_raft_66b191bc636af1cd, []int{0}
}

type LogEntry struct {
	Term                 int32    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Index                int32    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogEntry) Reset()         { *m = LogEntry{} }
func (m *LogEntry) String() string { return proto.CompactTextString(m) }
func (*LogEntry) ProtoMessage()    {}
func (*LogEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_66b191bc636af1cd, []int{0}
}
func (m *LogEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogEntry.Unmarshal(m, b)
}
func (m *LogEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogEntry.Marshal(b, m, deterministic)
}
func (dst *LogEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogEntry.Merge(dst, src)
}
func (m *LogEntry) XXX_Size() int {
	return xxx_messageInfo_LogEntry.Size(m)
}
func (m *LogEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_LogEntry.DiscardUnknown(m)
}

var xxx_messageInfo_LogEntry proto.InternalMessageInfo

func (m *LogEntry) GetTerm() int32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *LogEntry) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *LogEntry) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type AppendEntriesParam struct {
	Term                 int32       `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LeaderId             string      `protobuf:"bytes,2,opt,name=leaderId,proto3" json:"leaderId,omitempty"`
	PrevLogIndex         int32       `protobuf:"varint,3,opt,name=prevLogIndex,proto3" json:"prevLogIndex,omitempty"`
	PrevLogTerm          int32       `protobuf:"varint,4,opt,name=prevLogTerm,proto3" json:"prevLogTerm,omitempty"`
	Entries              []*LogEntry `protobuf:"bytes,5,rep,name=entries,proto3" json:"entries,omitempty"`
	LeaderCommit         int32       `protobuf:"varint,6,opt,name=leaderCommit,proto3" json:"leaderCommit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AppendEntriesParam) Reset()         { *m = AppendEntriesParam{} }
func (m *AppendEntriesParam) String() string { return proto.CompactTextString(m) }
func (*AppendEntriesParam) ProtoMessage()    {}
func (*AppendEntriesParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_66b191bc636af1cd, []int{1}
}
func (m *AppendEntriesParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntriesParam.Unmarshal(m, b)
}
func (m *AppendEntriesParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntriesParam.Marshal(b, m, deterministic)
}
func (dst *AppendEntriesParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntriesParam.Merge(dst, src)
}
func (m *AppendEntriesParam) XXX_Size() int {
	return xxx_messageInfo_AppendEntriesParam.Size(m)
}
func (m *AppendEntriesParam) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntriesParam.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntriesParam proto.InternalMessageInfo

func (m *AppendEntriesParam) GetTerm() int32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntriesParam) GetLeaderId() string {
	if m != nil {
		return m.LeaderId
	}
	return ""
}

func (m *AppendEntriesParam) GetPrevLogIndex() int32 {
	if m != nil {
		return m.PrevLogIndex
	}
	return 0
}

func (m *AppendEntriesParam) GetPrevLogTerm() int32 {
	if m != nil {
		return m.PrevLogTerm
	}
	return 0
}

func (m *AppendEntriesParam) GetEntries() []*LogEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *AppendEntriesParam) GetLeaderCommit() int32 {
	if m != nil {
		return m.LeaderCommit
	}
	return 0
}

type AppendEntriesResult struct {
	Term                 int32    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendEntriesResult) Reset()         { *m = AppendEntriesResult{} }
func (m *AppendEntriesResult) String() string { return proto.CompactTextString(m) }
func (*AppendEntriesResult) ProtoMessage()    {}
func (*AppendEntriesResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_66b191bc636af1cd, []int{2}
}
func (m *AppendEntriesResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntriesResult.Unmarshal(m, b)
}
func (m *AppendEntriesResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntriesResult.Marshal(b, m, deterministic)
}
func (dst *AppendEntriesResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntriesResult.Merge(dst, src)
}
func (m *AppendEntriesResult) XXX_Size() int {
	return xxx_messageInfo_AppendEntriesResult.Size(m)
}
func (m *AppendEntriesResult) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntriesResult.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntriesResult proto.InternalMessageInfo

func (m *AppendEntriesResult) GetTerm() int32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntriesResult) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type RequestVoteParam struct {
	Term                 int32    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	CandidateId          string   `protobuf:"bytes,2,opt,name=candidateId,proto3" json:"candidateId,omitempty"`
	LastLogIndex         int32    `protobuf:"varint,3,opt,name=lastLogIndex,proto3" json:"lastLogIndex,omitempty"`
	LastLogTerm          int32    `protobuf:"varint,4,opt,name=lastLogTerm,proto3" json:"lastLogTerm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestVoteParam) Reset()         { *m = RequestVoteParam{} }
func (m *RequestVoteParam) String() string { return proto.CompactTextString(m) }
func (*RequestVoteParam) ProtoMessage()    {}
func (*RequestVoteParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_66b191bc636af1cd, []int{3}
}
func (m *RequestVoteParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestVoteParam.Unmarshal(m, b)
}
func (m *RequestVoteParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestVoteParam.Marshal(b, m, deterministic)
}
func (dst *RequestVoteParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestVoteParam.Merge(dst, src)
}
func (m *RequestVoteParam) XXX_Size() int {
	return xxx_messageInfo_RequestVoteParam.Size(m)
}
func (m *RequestVoteParam) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestVoteParam.DiscardUnknown(m)
}

var xxx_messageInfo_RequestVoteParam proto.InternalMessageInfo

func (m *RequestVoteParam) GetTerm() int32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RequestVoteParam) GetCandidateId() string {
	if m != nil {
		return m.CandidateId
	}
	return ""
}

func (m *RequestVoteParam) GetLastLogIndex() int32 {
	if m != nil {
		return m.LastLogIndex
	}
	return 0
}

func (m *RequestVoteParam) GetLastLogTerm() int32 {
	if m != nil {
		return m.LastLogTerm
	}
	return 0
}

type RequestVoteResult struct {
	Term                 int32    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	VoteGranted          bool     `protobuf:"varint,2,opt,name=voteGranted,proto3" json:"voteGranted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestVoteResult) Reset()         { *m = RequestVoteResult{} }
func (m *RequestVoteResult) String() string { return proto.CompactTextString(m) }
func (*RequestVoteResult) ProtoMessage()    {}
func (*RequestVoteResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_66b191bc636af1cd, []int{4}
}
func (m *RequestVoteResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestVoteResult.Unmarshal(m, b)
}
func (m *RequestVoteResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestVoteResult.Marshal(b, m, deterministic)
}
func (dst *RequestVoteResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestVoteResult.Merge(dst, src)
}
func (m *RequestVoteResult) XXX_Size() int {
	return xxx_messageInfo_RequestVoteResult.Size(m)
}
func (m *RequestVoteResult) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestVoteResult.DiscardUnknown(m)
}

var xxx_messageInfo_RequestVoteResult proto.InternalMessageInfo

func (m *RequestVoteResult) GetTerm() int32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RequestVoteResult) GetVoteGranted() bool {
	if m != nil {
		return m.VoteGranted
	}
	return false
}

func init() {
	proto.RegisterType((*LogEntry)(nil), "raft.LogEntry")
	proto.RegisterType((*AppendEntriesParam)(nil), "raft.AppendEntriesParam")
	proto.RegisterType((*AppendEntriesResult)(nil), "raft.AppendEntriesResult")
	proto.RegisterType((*RequestVoteParam)(nil), "raft.RequestVoteParam")
	proto.RegisterType((*RequestVoteResult)(nil), "raft.RequestVoteResult")
	proto.RegisterEnum("raft.ServerRole", ServerRole_name, ServerRole_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServerServiceClient is the client API for ServerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServerServiceClient interface {
	AppendEntries(ctx context.Context, in *AppendEntriesParam, opts ...grpc.CallOption) (*AppendEntriesResult, error)
	RequestVote(ctx context.Context, in *RequestVoteParam, opts ...grpc.CallOption) (*RequestVoteResult, error)
}

type serverServiceClient struct {
	cc *grpc.ClientConn
}

func NewServerServiceClient(cc *grpc.ClientConn) ServerServiceClient {
	return &serverServiceClient{cc}
}

func (c *serverServiceClient) AppendEntries(ctx context.Context, in *AppendEntriesParam, opts ...grpc.CallOption) (*AppendEntriesResult, error) {
	out := new(AppendEntriesResult)
	err := c.cc.Invoke(ctx, "/raft.ServerService/appendEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serverServiceClient) RequestVote(ctx context.Context, in *RequestVoteParam, opts ...grpc.CallOption) (*RequestVoteResult, error) {
	out := new(RequestVoteResult)
	err := c.cc.Invoke(ctx, "/raft.ServerService/requestVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServerServiceServer is the server API for ServerService service.
type ServerServiceServer interface {
	AppendEntries(context.Context, *AppendEntriesParam) (*AppendEntriesResult, error)
	RequestVote(context.Context, *RequestVoteParam) (*RequestVoteResult, error)
}

func RegisterServerServiceServer(s *grpc.Server, srv ServerServiceServer) {
	s.RegisterService(&_ServerService_serviceDesc, srv)
}

func _ServerService_AppendEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppendEntriesParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServerServiceServer).AppendEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/raft.ServerService/AppendEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServerServiceServer).AppendEntries(ctx, req.(*AppendEntriesParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServerService_RequestVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestVoteParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServerServiceServer).RequestVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/raft.ServerService/RequestVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServerServiceServer).RequestVote(ctx, req.(*RequestVoteParam))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "raft.ServerService",
	HandlerType: (*ServerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "appendEntries",
			Handler:    _ServerService_AppendEntries_Handler,
		},
		{
			MethodName: "requestVote",
			Handler:    _ServerService_RequestVote_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "raft.proto",
}

func init() { proto.RegisterFile("raft.proto", fileDescriptor_raft_66b191bc636af1cd) }

var fileDescriptor_raft_66b191bc636af1cd = []byte{
	// 435 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0x4d, 0x6f, 0x13, 0x31,
	0x10, 0xc5, 0xcd, 0x47, 0x93, 0xd9, 0xa4, 0x0a, 0x06, 0xc1, 0x92, 0xd3, 0x6a, 0xb9, 0x44, 0x1c,
	0x72, 0x28, 0xe2, 0x8a, 0x94, 0x26, 0x0b, 0x44, 0x5a, 0xd1, 0xc8, 0x54, 0x20, 0x71, 0x33, 0xf1,
	0x34, 0xac, 0x94, 0xac, 0x17, 0xdb, 0x09, 0xe5, 0x4f, 0x70, 0xe3, 0xbf, 0xf1, 0x73, 0x90, 0xed,
	0x4d, 0x71, 0x9b, 0xc0, 0x25, 0x9a, 0x79, 0x9e, 0x79, 0x33, 0xef, 0x65, 0x07, 0x40, 0xf1, 0x6b,
	0x33, 0xae, 0x94, 0x34, 0x92, 0x36, 0x6d, 0x9c, 0xbe, 0x83, 0x4e, 0x2e, 0x57, 0x59, 0x69, 0xd4,
	0x0f, 0x4a, 0xa1, 0x69, 0x50, 0x6d, 0x62, 0x92, 0x90, 0x51, 0x8b, 0xb9, 0x98, 0x3e, 0x86, 0x56,
	0x51, 0x0a, 0xbc, 0x89, 0x4f, 0x1c, 0xe8, 0x13, 0x5b, 0x29, 0xb8, 0xe1, 0x71, 0x23, 0x21, 0xa3,
	0x1e, 0x73, 0x71, 0xfa, 0x9b, 0x00, 0x9d, 0x54, 0x15, 0x96, 0xc2, 0xb2, 0x15, 0xa8, 0x17, 0x5c,
	0xf1, 0xcd, 0x51, 0xd2, 0x21, 0x74, 0xd6, 0xc8, 0x05, 0xaa, 0xb9, 0x70, 0xbc, 0x5d, 0x76, 0x9b,
	0xd3, 0x14, 0x7a, 0x95, 0xc2, 0x5d, 0x2e, 0x57, 0x73, 0x37, 0xb7, 0xe1, 0xfa, 0xee, 0x60, 0x34,
	0x81, 0xa8, 0xce, 0xaf, 0x2c, 0x75, 0xd3, 0x95, 0x84, 0x10, 0x1d, 0xc1, 0x29, 0xfa, 0x2d, 0xe2,
	0x56, 0xd2, 0x18, 0x45, 0xe7, 0x67, 0x63, 0x27, 0x7d, 0xaf, 0x95, 0xed, 0x9f, 0xed, 0x3c, 0x3f,
	0x7b, 0x2a, 0x37, 0x9b, 0xc2, 0xc4, 0x6d, 0x3f, 0x2f, 0xc4, 0xd2, 0x29, 0x3c, 0xba, 0xa3, 0x8c,
	0xa1, 0xde, 0xae, 0xcd, 0x51, 0x69, 0x31, 0x9c, 0xea, 0xed, 0x72, 0x89, 0x5a, 0x3b, 0x65, 0x1d,
	0xb6, 0x4f, 0xd3, 0x9f, 0x04, 0x06, 0x0c, 0xbf, 0x6d, 0x51, 0x9b, 0x8f, 0xd2, 0xe0, 0xbf, 0xdd,
	0x49, 0x20, 0x5a, 0xf2, 0x52, 0x14, 0x82, 0x1b, 0xbc, 0x35, 0x28, 0x84, 0xdc, 0xce, 0x5c, 0x9b,
	0xfb, 0x1e, 0x85, 0x98, 0x65, 0xa9, 0xf3, 0xd0, 0xa3, 0x00, 0x4a, 0xe7, 0xf0, 0x30, 0xd8, 0xe7,
	0x3f, 0x9a, 0x12, 0x88, 0x76, 0xd2, 0xe0, 0x5b, 0xc5, 0x4b, 0x83, 0xa2, 0xd6, 0x15, 0x42, 0x2f,
	0x5e, 0x01, 0x7c, 0x40, 0xb5, 0x43, 0xc5, 0xe4, 0x1a, 0x69, 0x0f, 0x3a, 0x6f, 0x2e, 0xf3, 0xfc,
	0xf2, 0x53, 0xc6, 0x06, 0x0f, 0x68, 0x1f, 0xba, 0xd3, 0xc9, 0xfb, 0xd9, 0x7c, 0x36, 0xb9, 0xca,
	0x06, 0x84, 0x02, 0xb4, 0xf3, 0x6c, 0x32, 0xcb, 0xd8, 0xe0, 0xe4, 0xfc, 0x17, 0x81, 0xbe, 0xef,
	0xb3, 0xbf, 0xc5, 0x12, 0xe9, 0x0c, 0xfa, 0x3c, 0x74, 0x9a, 0xc6, 0xfe, 0x7f, 0x3b, 0xfc, 0xb0,
	0x86, 0xcf, 0x8e, 0xbc, 0xd4, 0x22, 0x5e, 0x43, 0xa4, 0xfe, 0x2a, 0xa3, 0x4f, 0x7c, 0xe5, 0x7d,
	0xf3, 0x87, 0x4f, 0x0f, 0x70, 0xdf, 0x7f, 0xf1, 0x1c, 0xce, 0xa4, 0x5a, 0x8d, 0x75, 0x71, 0xf3,
	0xfd, 0xab, 0xab, 0xb9, 0xe8, 0x32, 0x7e, 0x6d, 0x16, 0xf6, 0x6e, 0x16, 0xe4, 0xb3, 0xbb, 0x9c,
	0x2f, 0x6d, 0x77, 0x46, 0x2f, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0x78, 0xc7, 0xef, 0xcd, 0x54,
	0x03, 0x00, 0x00,
}
